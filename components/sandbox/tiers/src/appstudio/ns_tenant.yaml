apiVersion: template.openshift.io/v1
kind: Template
metadata: {}
objects:
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      openshift.io/description: ${SPACE_NAME}
      openshift.io/display-name: ${SPACE_NAME}
      openshift.io/requester: ${SPACE_NAME}
    labels:
      name: ${SPACE_NAME}-tenant
      argocd.argoproj.io/managed-by: gitops-service-argocd
      # billing labels ref: https://github.com/redhat-appstudio/book/blob/main/ADR/0010-namespace-metadata.md
      appstudio.redhat.com/workspace_name: ${SPACE_NAME}
    name: ${SPACE_NAME}-tenant

# Built-n developer environment is available for all users OOTB
- apiVersion: appstudio.redhat.com/v1alpha1
  kind: Environment
  metadata:
    name: development
    namespace: ${SPACE_NAME}-tenant
  spec:
    deploymentStrategy: AppStudioAutomated
    displayName: Development
    type: Non-POC

# Quotas and default limits for terminating (short-lived containers like build) containers
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: compute-build
    namespace: ${SPACE_NAME}-tenant
  spec:
    scopes:
    - Terminating
    hard:
      limits.cpu: ${CPU_BUILD_LIMIT}
      limits.memory: ${MEMORY_BUILD_LIMIT}
      requests.cpu: ${CPU_BUILD_REQUEST}
      requests.memory: ${MEMORY_BUILD_REQUEST}
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: storage
    namespace: ${SPACE_NAME}-tenant
  spec:
    hard:
      limits.ephemeral-storage: 50Gi
      requests.storage: ${REQUEST_STORAGE}
      requests.ephemeral-storage: 50Gi
      count/persistentvolumeclaims: "${COUNT_PVC}"
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: toolchain-crds
    namespace: ${SPACE_NAME}-tenant
  spec:
    hard:
      count/spacerequests.toolchain.dev.openshift.com: "32"
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: appstudio-crds
    namespace: ${SPACE_NAME}-tenant
  spec:
    hard:
      count/applications.appstudio.redhat.com: "512"
      count/componentdetectionqueries.appstudio.redhat.com: "512"
      count/components.appstudio.redhat.com: "512"
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: appstudio-crds-build
    namespace: ${SPACE_NAME}-tenant
  spec:
    hard:
      count/buildpipelineselectors.appstudio.redhat.com: "512"
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: appstudio-crds-gitops
    namespace: ${SPACE_NAME}-tenant
  spec:
    hard:
      count/environments.appstudio.redhat.com: "512"
      count/promotionruns.appstudio.redhat.com: "512"
      count/deploymenttargetclaims.appstudio.redhat.com: "32"
      count/deploymenttargetclasses.appstudio.redhat.com: "32"
      count/deploymenttargets.appstudio.redhat.com: "32"
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: appstudio-crds-integration
    namespace: ${SPACE_NAME}-tenant
  spec:
    hard:
      count/integrationtestscenarios.appstudio.redhat.com: "512"
      count/snapshots.appstudio.redhat.com: "1024"
      count/snapshotenvironmentbindings.appstudio.redhat.com: "512"
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: appstudio-crds-release
    namespace: ${SPACE_NAME}-tenant
  spec:
    hard:
      count/releaseplanadmissions.appstudio.redhat.com: "512"
      count/releaseplans.appstudio.redhat.com: "512"
      count/releases.appstudio.redhat.com: "512"
      count/releasestrategies.appstudio.redhat.com: "512"
      count/internalrequests.appstudio.redhat.com: "512"
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: appstudio-crds-enterprisecontract
    namespace: ${SPACE_NAME}-tenant
  spec:
    hard:
      count/enterprisecontractpolicies.appstudio.redhat.com: "512"
- apiVersion: v1
  kind: LimitRange
  metadata:
    name: resource-limits
    namespace: ${SPACE_NAME}-tenant
  spec:
    limits:
    - type: "Container"
      default:
        cpu: 2000m
        memory: 2Gi
      defaultRequest:
        cpu: 100m
        memory: 256Mi

- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-same-namespace
    namespace: ${SPACE_NAME}-tenant
  spec:
    podSelector: {}
    ingress:
    - from:
      - podSelector: {}
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-openshift-ingress
    namespace: ${SPACE_NAME}-tenant
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: ingress
    podSelector: {}
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-openshift-monitoring
    namespace: ${SPACE_NAME}-tenant
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: monitoring
    podSelector: {}
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-codeready-workspaces-operator
    namespace: ${SPACE_NAME}-tenant
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: codeready-workspaces
    podSelector: {}
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-olm-namespaces
    namespace: ${SPACE_NAME}-tenant
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            openshift.io/scc: anyuid
    podSelector: {}
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-console-namespaces
    namespace: ${SPACE_NAME}-tenant
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: console
    podSelector: {}
    policyTypes:
    - Ingress
# ServiceAccount and RoleBindings for running Pipelines.
# appstudio-pipelines-runner-clusterrole is deployed by the pipeline-service component.
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: appstudio-pipeline
    namespace: ${SPACE_NAME}-tenant
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: appstudio-pipelines-runner-rolebinding
    namespace: ${SPACE_NAME}-tenant
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: appstudio-pipelines-runner
  subjects:
  - kind: ServiceAccount
    namespace: ${SPACE_NAME}-tenant
    name: appstudio-pipeline
- apiVersion: v1
  data: {}
  kind: ConfigMap
  metadata:
    labels:
      config.openshift.io/inject-trusted-cabundle: "true"
    name: trusted-ca
    namespace: ${SPACE_NAME}-tenant
parameters:
- name: SPACE_NAME
  required: true
- name: MEMORY_LIMIT
  value: "32Gi"
- name: MEMORY_REQUEST
  value: "32Gi"
- name: CPU_BUILD_LIMIT
  value: "120"
- name: CPU_BUILD_REQUEST
  value: "60"
- name: MEMORY_BUILD_LIMIT
  value: "128Gi"
- name: MEMORY_BUILD_REQUEST
  value: "64Gi"
- name: COUNT_PVC
  value: "90"
- name: REQUEST_STORAGE
  value: "200Gi"
