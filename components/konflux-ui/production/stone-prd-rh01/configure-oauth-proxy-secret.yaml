---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: konflux-oauth-proxy-generator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: konflux-oauth-proxy-generator-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - create
  - get
  - update
  - patch
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: konflux-oauth-proxy-generator-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: konflux-oauth-proxy-generator-role
subjects:
- kind: ServiceAccount
  name: konflux-oauth-proxy-generator
  namespace: konflux-ui
---
apiVersion: batch/v1
kind: Job
metadata:
  name: konflux-generate-oauth-proxy-secrets
spec:
  template:
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          set -o errexit
          set -o nounset
          set -o pipefail

          namespace="$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)"
          client_secret=oauth2-proxy-client-secret
          cookie_secret=oauth2-proxy-cookie-secret

          echo "Generating/updating $cookie_secret"

          # The cookie secret needs to be 16, 24, or 32 bytes long.
          # kubectl is re-encoding the value of cookie_secret, so when it's being served
          # to oauth2-proxy, it's actually the 24 bytes string which was the output of
          # openssl's encoding.
          # Need to make sure this is consistent, or find a different approach.
          random_pass=$(openssl rand -base64 16)
          kubectl create secret generic $cookie_secret \
              --namespace "$namespace" \
              --from-literal="cookie-secret=${random_pass}" \
              --dry-run=client \
              -o yaml \
              | kubectl apply -f -


          echo "Generating/updating $client_secret"

          random_pass=$(openssl rand -base64 20)
          kubectl create secret generic $client_secret \
              --namespace "$namespace" \
              --from-literal="client-secret=${random_pass}" \
              --dry-run=client \
              -o yaml \
              | kubectl apply -f -

          echo "Restarting the proxy deployment"
          if kubectl get deployment/proxy; then
            kubectl -n "$namespace" rollout restart deployment/proxy
          else
            echo "skipping restart"
          fi

        image: quay.io/konflux-ci/appstudio-utils:ab6b0b8e40e440158e7288c73aff1cf83a2cc8a9@sha256:24179f0efd06c65d16868c2d7eb82573cce8e43533de6cea14fec3b7446e0b14
        imagePullPolicy: Always
        name: konflux-oauth-client-secret-generation
        resources:
          limits:
            cpu: 100m
            memory: 250Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccountName: konflux-oauth-proxy-generator
      terminationGracePeriodSeconds: 30
