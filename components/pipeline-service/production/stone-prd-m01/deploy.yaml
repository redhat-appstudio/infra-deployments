apiVersion: v1
kind: Namespace
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: plnsvc-tests
---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  labels:
    argocd.argoproj.io/managed-by: openshift-gitops
  name: tekton-results
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: chains-secrets-admin
  namespace: openshift-pipelines
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: pac-secret-manager
  namespace: openshift-pipelines
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: pipeline-service-exporter
  namespace: openshift-pipelines
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: tekton-results-tests
  namespace: plnsvc-tests
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: metrics-reader
  namespace: tekton-results
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-api
  namespace: tekton-results
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-watcher
  namespace: tekton-results
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: chains-secret-admin
  namespace: openshift-pipelines
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - create
  - get
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/name: tekton-results-info
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-info
  namespace: tekton-results
rules:
- apiGroups:
  - ""
  resourceNames:
  - tekton-results-info
  resources:
  - configmaps
  verbs:
  - get
  - describe
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: openshift-gitops-apply-tekton-config-parameters
rules:
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - list
  - patch
  - create
  - delete
- apiGroups:
  - operator.tekton.dev
  resources:
  - tektonconfigs
  verbs:
  - get
  - list
  - patch
  - create
  - delete
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - get
  - list
  - patch
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: openshift-gitops-cronjobs-admin
rules:
- apiGroups:
  - ""
  resourceNames:
  - pac-secret-manager
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - patch
  - create
  - delete
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - get
  - list
  - patch
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: openshift-gitops-jobs-admin
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - list
  - patch
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: pac-secret-manager
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: pipeline-service-exporter-reader
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - namespaces
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  - taskruns
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: pipeline-service-sre
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - delete
- apiGroups:
  - quota.openshift.io
  resources:
  - clusterresourcequotas
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - appstudio-pipeline
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
- apiGroups:
  - pipelinesascode.tekton.dev
  - results.tekton.dev
  - tekton.dev
  - triggers.tekton.dev
  - resolution.tekton.dev
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metrics.k8s.io
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: tekton-chains-public-key-viewer
rules:
- apiGroups:
  - ""
  resourceNames:
  - public-key
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: tekton-results-admin
rules:
- apiGroups:
  - results.tekton.dev
  resources:
  - results
  - records
  - logs
  verbs:
  - create
  - update
  - get
  - list
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-api
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: tekton-results-readonly
rules:
- apiGroups:
  - results.tekton.dev
  resources:
  - results
  - records
  - logs
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-readwrite
rules:
- apiGroups:
  - results.tekton.dev
  resources:
  - results
  - records
  - logs
  verbs:
  - create
  - update
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: tekton-results-service-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-watcher
rules:
- apiGroups:
  - results.tekton.dev
  resources:
  - logs
  - results
  - records
  verbs:
  - create
  - get
  - update
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  - taskruns
  verbs:
  - get
  - list
  - patch
  - update
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - tekton.dev
  resources:
  - pipelines
  verbs:
  - get
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: tekton-results-watcher-rbac
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: chains-secret-admin
  namespace: openshift-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: chains-secret-admin
subjects:
- kind: ServiceAccount
  name: chains-secrets-admin
  namespace: openshift-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: pipeline-service-sre-ns-edit
  namespace: openshift-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: Pipeline Service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: tekton-chains-public-key-viewer
  namespace: openshift-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-chains-public-key-viewer
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: pipeline-service-admin
  namespace: plnsvc-tests
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-results-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: Pipeline Service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: pipeline-service-sre-ns-edit
  namespace: tekton-results
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: Pipeline Service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/name: tekton-results-info
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-info
  namespace: tekton-results
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-results-info
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: tekton-results-tests
  namespace: plnsvc-tests
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-results-readonly
subjects:
- kind: ServiceAccount
  name: tekton-results-tests
  namespace: plnsvc-tests
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: openshift-gitops-apply-tekton-config-parameters
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openshift-gitops-apply-tekton-config-parameters
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: openshift-gitops-cronjobs-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openshift-gitops-cronjobs-admin
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: openshift-gitops-jobs-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openshift-gitops-jobs-admin
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: pac-secret-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pac-secret-manager
subjects:
- kind: ServiceAccount
  name: pac-secret-manager
  namespace: openshift-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: pipeline-service-exporter-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pipeline-service-exporter-reader
subjects:
- kind: ServiceAccount
  name: pipeline-service-exporter
  namespace: openshift-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: pipeline-service-sre
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pipeline-service-sre
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: Pipeline Service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: prometheus-tekton-results-service-metrics-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-results-service-metrics-reader
subjects:
- kind: ServiceAccount
  name: metrics-reader
  namespace: tekton-results
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-api
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-results-api
subjects:
- kind: ServiceAccount
  name: tekton-results-api
  namespace: tekton-results
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-watcher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-results-watcher
subjects:
- kind: ServiceAccount
  name: tekton-results-watcher
  namespace: tekton-results
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: tekton-results-watcher-logs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-results-admin
subjects:
- kind: ServiceAccount
  name: tekton-results-watcher
  namespace: tekton-results
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: tekton-results-watcher-rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-results-watcher-rbac
subjects:
- kind: ServiceAccount
  name: tekton-results-watcher
  namespace: tekton-results
---
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "string",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    operator.tekton.dev/operand-name: tektoncd-pipelines
  name: config-logging
  namespace: openshift-pipelines
---
apiVersion: v1
data:
  config.env: |
    DB_USER=
    DB_PASSWORD=
    DB_HOST=
    DB_PORT=5432
    DB_NAME=
    DB_SSLMODE=disable
    DB_SSLROOTCERT=
    DB_ENABLE_AUTO_MIGRATION=true
    SERVER_PORT=8080
    PROMETHEUS_PORT=9090
    PROMETHEUS_HISTOGRAM=true
    TLS_PATH=/etc/tls
    AUTH_DISABLE=false
    AUTH_IMPERSONATE=true
    LOG_LEVEL=info
    LOGS_API=false
    LOGS_TYPE=File
    LOGS_BUFFER_SIZE=5242880
    LOGS_PATH=/logs
    S3_BUCKET_NAME=
    S3_ENDPOINT=
    S3_HOSTNAME_IMMUTABLE=false
    S3_REGION=
    S3_ACCESS_KEY_ID=
    S3_SECRET_ACCESS_KEY=
    S3_MULTI_PART_SIZE=5242880
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-api-config
  namespace: tekton-results
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    # lease-duration is how long non-leaders will wait to try to acquire the
    # lock; 15 seconds is the value used by core kubernetes controllers.
    lease-duration: "60s"
    # renew-deadline is how long a leader will try to renew the lease before
    # giving up; 10 seconds is the value used by core kubernetes controllers.
    renew-deadline: "40s"
    # retry-period is how long the leader election client waits between tries of
    # actions; 2 seconds is the value used by core kubernetes controllers.
    retry-period: "10s"
    # buckets is the number of buckets used to partition key space of each
    # Reconciler. If this number is M and the replica number of the controller
    # is N, the N replicas will compete for the M buckets. The owner of a
    # bucket will take care of the reconciling for the keys partitioned into
    # that bucket.
    buckets: "1"
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/name: tekton-results-leader-election
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-config-leader-election
  namespace: tekton-results
---
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.watcher: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "string",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/name: tekton-results-logging
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-config-logging
  namespace: tekton-results
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using Stackdriver will incur additional charges.
    metrics.backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the Stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used and metrics will be sent to the cluster's project if this field is
    # not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed
    # to send metrics to Stackdriver using "global" resource type and custom
    # metric type. Setting this flag to "true" could cause extra Stackdriver
    # charge.  If metrics.backend-destination is not Stackdriver, this is
    # ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
    metrics.taskrun.level: "task"
    metrics.taskrun.duration-type: "histogram"
    metrics.pipelinerun.level: "pipeline"
    metrics.pipelinerun.duration-type: "histogram"
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/name: tekton-results-observability
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-config-observability
  namespace: tekton-results
---
apiVersion: v1
data:
  version: devel
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/name: tekton-results-info
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-info
  namespace: tekton-results
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
    kubernetes.io/service-account.name: metrics-reader
  name: metrics-reader
  namespace: tekton-results
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app: pipeline-metrics-exporter
  name: pipeline-metrics-exporter-service
  namespace: openshift-pipelines
spec:
  ports:
  - name: metrics
    port: 9117
    protocol: TCP
    targetPort: 9117
  selector:
    app: pipeline-metrics-exporter
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
    ignore-check.kube-linter.io/dangling-service: This service is not dangling, it
      exposes metric for an OSP deployment
  labels:
    app: tekton-chains-controller
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: tekton-chains
  name: tekton-chains
  namespace: openshift-pipelines
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-chains
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
    service.beta.openshift.io/serving-cert-secret-name: tekton-results-tls
  labels:
    app.kubernetes.io/name: tekton-results-api
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-api-service
  namespace: tekton-results
spec:
  ports:
  - name: server
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: metrics
    port: 9443
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/name: tekton-results-api
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "2"
  labels:
    app.kubernetes.io/name: tekton-results-watcher
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-watcher
  namespace: tekton-results
spec:
  ports:
  - name: watchermetrics
    port: 8443
    targetPort: watchermetrics
  - name: profiling
    port: 8008
  selector:
    app.kubernetes.io/name: tekton-results-watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: pipeline-metrics-exporter
  namespace: openshift-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pipeline-metrics-exporter
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
      labels:
        app: pipeline-metrics-exporter
    spec:
      containers:
      - args: []
        image: quay.io/redhat-appstudio/pipeline-service-exporter:42a1938a18bf5b999241fafbf0d57a1c7d19e0f2
        name: pipeline-metrics-exporter
        ports:
        - containerPort: 9117
          name: metrics
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 128Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      restartPolicy: Always
      serviceAccountName: pipeline-service-exporter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/name: tekton-results-api
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-api
  namespace: tekton-results
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-results-api
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/name: tekton-results-api
        app.kubernetes.io/version: devel
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:9443
        - --upstream=http://127.0.0.1:9090/
        - --logtostderr=true
        - --v=6
        image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.12
        name: kube-rbac-proxy
        ports:
        - containerPort: 9443
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      - env:
        - name: LOGS_API
          value: "true"
        - name: LOGS_TYPE
          value: S3
        - name: S3_HOSTNAME_IMMUTABLE
          value: "true"
        - name: S3_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws_access_key_id
              name: tekton-results-s3
        - name: S3_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws_secret_access_key
              name: tekton-results-s3
        - name: S3_REGION
          valueFrom:
            secretKeyRef:
              key: aws_region
              name: tekton-results-s3
        - name: S3_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              key: bucket
              name: tekton-results-s3
        - name: S3_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: endpoint
              name: tekton-results-s3
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: db.user
              name: tekton-results-database
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db.password
              name: tekton-results-database
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              key: db.host
              name: tekton-results-database
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              key: db.name
              name: tekton-results-database
        image: quay.io/redhat-appstudio/tekton-results-api:dd067cad783501dc87fdec7285ca62e573fd85e3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
        name: api
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 5m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 10
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tekton/results
          name: config
          readOnly: true
        - mountPath: /etc/tls
          name: tls
          readOnly: true
      initContainers:
      - env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: db.user
              name: tekton-results-database
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db.password
              name: tekton-results-database
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              key: db.host
              name: tekton-results-database
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              key: db.name
              name: tekton-results-database
        image: quay.io/redhat-appstudio/tekton-results-migrator:dd067cad783501dc87fdec7285ca62e573fd85e3
        name: migrator
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /etc/tekton/results
          name: config
          readOnly: true
      serviceAccountName: tekton-results-api
      volumes:
      - configMap:
          name: tekton-results-api-config
        name: config
      - name: tls
        secret:
          secretName: tekton-results-tls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "2"
  labels:
    app.kubernetes.io/name: tekton-results-watcher
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-watcher
  namespace: tekton-results
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-results-watcher
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/name: tekton-results-watcher
        app.kubernetes.io/version: devel
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:9090/
        - --logtostderr=true
        - --v=6
        image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.12
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: watchermetrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      - args:
        - -api_addr
        - tekton-results-api-service.tekton-results.svc.cluster.local:8080
        - -auth_mode
        - token
        - -check_owner=false
        - -completed_run_grace_period
        - 10m
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: tekton-results-config-logging
        - name: CONFIG_LEADERELECTION_NAME
          value: tekton-results-config-leader-election
        - name: CONFIG_OBSERVABILITY_NAME
          value: tekton-results-config-observability
        - name: METRICS_DOMAIN
          value: tekton.dev/results
        - name: TEKTON_RESULTS_API_SERVICE
          value: tekton-results-api-service.tekton-pipelines.svc.cluster.local:8080
        - name: AUTH_MODE
          value: token
        image: quay.io/redhat-appstudio/tekton-results-watcher:dd067cad783501dc87fdec7285ca62e573fd85e3
        name: watcher
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        resources:
          limits:
            cpu: 250m
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /etc/tls
          name: tls
          readOnly: true
      serviceAccountName: tekton-results-watcher
      volumes:
      - name: tls
        secret:
          secretName: tekton-results-tls
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: pac-secret-reaper
  namespace: openshift-pipelines
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    spec:
      template:
        metadata:
          annotations:
            argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - |
              # Delete "pac-gitauth-*" secrets older than a day
              set -o errexit
              set -o nounset
              set -o pipefail
              for namespace in $(kubectl get namespaces -o name | cut -d/ -f2 | grep -E "\\-tenant$|^tekton-ci$"); do
                echo "$namespace: Cleaning pac-gitauth secrets"
                kubectl get secrets --namespace $namespace -o json | \
                  jq -r '.items[] |
                    select(.metadata.name |
                    startswith("pac-gitauth-")) |
                    select(.metadata.creationTimestamp | fromdateiso8601 < (now - 86400)) |
                    "secret/" + .metadata.name
                  ' | \
                  xargs --max-args 1 --no-run-if-empty kubectl delete -n $namespace
              done
              echo "Done"
            image: registry.redhat.io/openshift4/ose-tools-rhel8@sha256:1054e906ee0183531b401d3c0b0d777cecb25ef95b1c9c48387c6cd7b0e57b9d
            imagePullPolicy: Always
            name: delete-pac-secrets
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 10m
                memory: 10Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              seccompProfile:
                type: RuntimeDefault
          restartPolicy: Never
          serviceAccountName: pac-secret-manager
  schedule: '*/10 * * * *'
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "1"
  name: tekton-chains-signing-secret
  namespace: openshift-pipelines
spec:
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          set -o errexit
          set -o nounset
          set -o pipefail

          namespace="openshift-pipelines"
          secret="signing-secrets"

          cd /tmp

          if [ "$(kubectl get secret "$secret" -n "$namespace" -o jsonpath='{.data}' --ignore-not-found --allow-missing-template-keys)" != "" ]; then
            echo "Signing secret exists and is non-empty."
          else
            # Delete secret/signing-secrets if already exists since by default cosign creates immutable secrets
            kubectl delete secrets "$secret" -n "$namespace" --ignore-not-found=true

            # To make this run conveniently without user input let's create a random password
            RANDOM_PASS=$( openssl rand -base64 30 )

            # Generate the key pair secret directly in the cluster.
            # The secret should be created as immutable.
            echo "Generating k8s secret/$secret in $namespace with key-pair"
            env COSIGN_PASSWORD=$RANDOM_PASS cosign generate-key-pair "k8s://$namespace/$secret"
          fi

          # If the secret is not marked as immutable, make it so.
          if [ "$(kubectl get secret "$secret" -n "$namespace" -o jsonpath='{.immutable}')" != "true" ]; then
            echo "Making secret immutable"
            kubectl patch secret "$secret" -n "$namespace" --dry-run=client -o yaml \
              --patch='{"immutable": true}' \
            | kubectl apply -f -
          fi

          echo "Generating/updating the secret with the public key"
          kubectl create secret generic public-key \
            --namespace "$namespace" \
            --from-literal=cosign.pub="$(
              cosign public-key --key "k8s://$namespace/$secret"
            )" \
            --dry-run=client \
            -o yaml | kubectl apply -f -
        image: quay.io/redhat-appstudio/appstudio-utils:dbbdd82734232e6289e8fbae5b4c858481a7c057
        imagePullPolicy: Always
        name: chains-secret-generation
        resources:
          limits:
            cpu: 100m
            memory: 250Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: chains-secrets-admin
      serviceAccountName: chains-secrets-admin
      terminationGracePeriodSeconds: 30
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "-1"
  name: pipelines-as-code-secret
  namespace: openshift-pipelines
spec:
  dataFrom:
  - extract:
      key: production/pipeline-service/github-app
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: appsre-stonesoup-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    name: pipelines-as-code-secret
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "-1"
  name: tekton-results-database
  namespace: tekton-results
spec:
  dataFrom:
  - extract:
      key: integrations-output/terraform-resources/app-sre-prod-01/stonesoup-infra-production/multi-tenant-prod-plnsvc-rds
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: appsre-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    name: tekton-results-database
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "-1"
  name: tekton-results-s3
  namespace: tekton-results
spec:
  dataFrom:
  - extract:
      key: integrations-output/terraform-resources/app-sre-prod-01/stonesoup-infra-production/multi-tenant-prod-plnsvc-s3
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: appsre-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    name: tekton-results-s3
    template:
      data:
        aws_access_key_id: '{{ .aws_access_key_id }}'
        aws_region: '{{ .aws_region }}'
        aws_secret_access_key: '{{ .aws_secret_access_key }}'
        bucket: '{{ .bucket }}'
        endpoint: https://{{ .endpoint }}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: pipeline-service
  namespace: openshift-pipelines
spec:
  endpoints:
  - honorLabels: true
    interval: 15s
    path: /metrics
    port: metrics
    scheme: http
  jobLabel: app
  namespaceSelector:
    matchNames:
    - openshift-pipelines
  selector:
    matchLabels:
      app: pipeline-metrics-exporter
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "1"
  name: tekton-chains-controller
  namespace: openshift-pipelines
spec:
  endpoints:
  - honorLabels: true
    interval: 15s
    path: /metrics
    port: metrics
    scheme: http
  jobLabel: app.kubernetes.io/name
  namespaceSelector:
    matchNames:
    - openshift-pipelines
  selector:
    matchLabels:
      app: tekton-chains-controller
      app.kubernetes.io/component: metrics
      app.kubernetes.io/part-of: tekton-chains
  targetLabels:
  - app
  - app.kubernetes.io/component
  - app.kubernetes.io/part-of
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: tekton-results-api
  namespace: tekton-results
spec:
  endpoints:
  - bearerTokenSecret:
      key: token
      name: metrics-reader
    path: /metrics
    port: metrics
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  jobLabel: app.kubernetes.io/name
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-results-api
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: tekton-results-watcher
  namespace: tekton-results
spec:
  endpoints:
  - bearerTokenSecret:
      key: token
      name: metrics-reader
    path: /metrics
    port: watchermetrics
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-results-watcher
---
apiVersion: operator.tekton.dev/v1alpha1
kind: TektonConfig
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: config
spec:
  chain:
    artifacts.oci.storage: oci
    artifacts.pipelinerun.format: in-toto
    artifacts.pipelinerun.storage: oci
    artifacts.taskrun.format: in-toto
    artifacts.taskrun.storage: ""
    transparency.enabled: "false"
  params:
  - name: createRbacResource
    value: "false"
  pipeline:
    default-service-account: appstudio-pipeline
    enable-api-fields: beta
    enable-bundles-resolver: true
    enable-cluster-resolver: true
    enable-git-resolver: true
    enable-hub-resolver: true
    enable-tekton-oci-bundles: true
    performance:
      buckets: 1
      disable-ha: false
      kube-api-burst: 50
      kube-api-qps: 50
      replicas: 1
      threads-per-controller: 32
  platforms:
    openshift:
      pipelinesAsCode:
        enable: true
        settings:
          application-name: Red Hat Trusted App Pipeline
          custom-console-name: Red Hat Trusted App Pipeline
          custom-console-url: https://console.redhat.com/preview/application-pipeline
          custom-console-url-pr-details: https://console.redhat.com/preview/application-pipeline
          custom-console-url-pr-tasklog: https://console.redhat.com/preview/application-pipeline
  profile: all
  pruner:
    disabled: true
  targetNamespace: openshift-pipelines
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: openshift-pipelines-operator
  namespace: openshift-operators
spec:
  channel: pipelines-1.13
  name: openshift-pipelines-operator-rh
  source: redhat-operators
  sourceNamespace: openshift-marketplace
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
    haproxy.router.openshift.io/hsts_header: max-age=63072000
    haproxy.router.openshift.io/timeout: 86410s
    openshift.io/host.generated: "true"
    router.openshift.io/haproxy.health.check.interval: 86400s
  labels:
    app.kubernetes.io/part-of: tekton-results
  name: tekton-results
  namespace: tekton-results
spec:
  port:
    targetPort: server
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: reencrypt
  to:
    kind: Service
    name: tekton-results-api-service
    weight: 100
  wildcardPolicy: None
---
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: false
allowPrivilegedContainer: false
allowedCapabilities:
- SETFCAP
apiVersion: security.openshift.io/v1
defaultAddCapabilities: null
fsGroup:
  type: MustRunAs
groups:
- system:cluster-admins
kind: SecurityContextConstraints
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
  name: appstudio-pipelines-scc
priority: 10
readOnlyRootFilesystem: false
requiredDropCapabilities:
- MKNOD
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
users: []
volumes:
- configMap
- downwardAPI
- emptyDir
- persistentVolumeClaim
- projected
- secret
