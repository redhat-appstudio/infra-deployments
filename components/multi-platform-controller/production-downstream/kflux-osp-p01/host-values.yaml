environment: "prod"

archDefaults:
  arm64:
    ami: "ami-03d6a5256a46c9feb"
    key-name: "kflux-osp-p01-key-pair"
    security-group-id: "sg-0e1a9339d698a73e1"
    subnet-id: "subnet-0dffd53ed51b01e79"

  amd64:
    ami: "ami-026ebd4cfe2c043b2"
    key-name: "kflux-osp-p01-key-pair"
    security-group-id: "sg-0e1a9339d698a73e1"
    subnet-id: "subnet-0dffd53ed51b01e79"


dynamicConfigs:
  linux-arm64: {}

  linux-amd64: {}

  linux-mlarge-arm64: {}

  linux-mlarge-amd64: {}

  linux-mxlarge-arm64: {}

  linux-mxlarge-amd64: {}

  linux-m2xlarge-arm64: {}

  linux-m2xlarge-amd64: {}

  linux-m4xlarge-arm64: {}

  linux-m4xlarge-amd64: {}

  linux-m8xlarge-arm64: {}

  linux-m8xlarge-amd64: {}

  linux-c6gd2xlarge-arm64:
    user-data: |
      Content-Type: multipart/mixed; boundary="//"
      MIME-Version: 1.0

      --//
      Content-Type: text/cloud-config; charset="us-ascii"
      MIME-Version: 1.0
      Content-Transfer-Encoding: 7bit
      Content-Disposition: attachment; filename="cloud-config.txt"

      #cloud-config
      cloud_final_modules:
        - [scripts-user, always]

      --//
      Content-Type: text/x-shellscript; charset="us-ascii"
      MIME-Version: 1.0
      Content-Transfer-Encoding: 7bit
      Content-Disposition: attachment; filename="userdata.txt"

      #!/bin/bash -ex

      if lsblk -no FSTYPE /dev/nvme1n1 | grep -qE '\S'; then
       echo "File system exists on the disk."
      else
       echo "No file system found on the disk /dev/nvme1n1"
       mkfs -t xfs /dev/nvme1n1
      fi

      mount /dev/nvme1n1 /home

      if [ -d "/home/var-lib-containers" ]; then
       echo "Directory '/home/var-lib-containers' exist"
      else
       echo "Directory '/home/var-lib-containers' doesn't exist"
       mkdir -p /home/var-lib-containers /var/lib/containers
      fi

      mount --bind /home/var-lib-containers /var/lib/containers

      if [ -d "/home/var-tmp" ]; then
       echo "Directory '/home/var-tmp' exist"
      else
       echo "Directory '/home/var-tmp' doesn't exist"
       mkdir -p /home/var-tmp /var/tmp
      fi
      
      mount --bind /home/var-tmp /var/tmp
      
      if [ -d "/home/ec2-user" ]; then
      echo "ec2-user home exists"
      else
      echo "ec2-user home doesn't exist"
      mkdir -p /home/ec2-user/.ssh
      chown -R ec2-user /home/ec2-user
      fi

      sed -n 's,.*\(ssh-.*\s\),\1,p' /root/.ssh/authorized_keys > /home/ec2-user/.ssh/authorized_keys
      chown ec2-user /home/ec2-user/.ssh/authorized_keys
      chmod 600 /home/ec2-user/.ssh/authorized_keys
      chmod 700 /home/ec2-user/.ssh
      restorecon -r /home/ec2-user

      --//--

  linux-cxlarge-arm64: {}

  linux-cxlarge-amd64: {}

  linux-c2xlarge-arm64: {}

  linux-c2xlarge-amd64: {}

  linux-c4xlarge-arm64: {}

  linux-c4xlarge-amd64: {}

  linux-c8xlarge-arm64: {}

  linux-c8xlarge-amd64: {}

  linux-g4xlarge-amd64: {}

  linux-g6xlarge-amd64:
    ami: "ami-0ad6c6b0ac6c36199"
    user-data: |
      Content-Type: multipart/mixed; boundary="//"
      MIME-Version: 1.0

      --//
      Content-Type: text/cloud-config; charset="us-ascii"
      MIME-Version: 1.0
      Content-Transfer-Encoding: 7bit
      Content-Disposition: attachment; filename="cloud-config.txt"

      #cloud-config
      cloud_final_modules:
        - [scripts-user, always]

      --//
      Content-Type: text/x-shellscript; charset="us-ascii"
      MIME-Version: 1.0
      Content-Transfer-Encoding: 7bit
      Content-Disposition: attachment; filename="userdata.txt"

      #!/bin/bash -ex

      if lsblk -no FSTYPE /dev/nvme1n1 | grep -qE '\S'; then
        echo "File system exists on the disk."
      else
        echo "No file system found on the disk /dev/nvme1n1"
        mkfs -t xfs /dev/nvme1n1
      fi

      mount /dev/nvme1n1 /home

      if [ -d "/home/var-lib-containers" ]; then
        echo "Directory '/home/var-lib-containers' exist"
      else
        echo "Directory '/home/var-lib-containers' doesn't exist"
        mkdir -p /home/var-lib-containers /var/lib/containers
      fi

      mount --bind /home/var-lib-containers /var/lib/containers

      if [ -d "/home/var-tmp" ]; then
        echo "Directory '/home/var-tmp' exist"
      else
        echo "Directory '/home/var-tmp' doesn't exist"
        mkdir -p /home/var-tmp /var/tmp
      fi

      mount --bind /home/var-tmp /var/tmp
      chmod a+rw /var/tmp

      if [ -d "/home/ec2-user" ]; then
        echo "ec2-user home exists"
      else
        echo "ec2-user home doesn't exist"
        mkdir -p /home/ec2-user/.ssh
        chown -R ec2-user /home/ec2-user
      fi

      sed -n 's,.*\(ssh-.*\s\),\1,p' /root/.ssh/authorized_keys > /home/ec2-user/.ssh/authorized_keys
      chown ec2-user /home/ec2-user/.ssh/authorized_keys
      chmod 600 /home/ec2-user/.ssh/authorized_keys
      chmod 700 /home/ec2-user/.ssh
      restorecon -r /home/ec2-user

      mkdir -p /etc/cdi
      chmod a+rwx /etc/cdi
      su - ec2-user
      nvidia-ctk cdi generate --output=/etc/cdi/nvidia.yaml
      --//--

  linux-root-arm64:
    sudo-commands: "/usr/bin/podman"
    disk: "200"
    iops: "16000"
    throughput: "1000"

  linux-root-amd64:
    instance-type: "m6idn.2xlarge"
    sudo-commands: "/usr/bin/podman"
    disk: "200"
    user-data: |-
      Content-Type: multipart/mixed; boundary="//"
      MIME-Version: 1.0
      
      --//
      Content-Type: text/cloud-config; charset="us-ascii"
      MIME-Version: 1.0
      Content-Transfer-Encoding: 7bit
      Content-Disposition: attachment; filename="cloud-config.txt"
      
      #cloud-config
      cloud_final_modules:
        - [scripts-user, always]
      
      --//
      Content-Type: text/x-shellscript; charset="us-ascii"
      MIME-Version: 1.0
      Content-Transfer-Encoding: 7bit
      Content-Disposition: attachment; filename="userdata.txt"
      
      #!/bin/bash -ex
      
      if lsblk -no FSTYPE /dev/nvme1n1 | grep -qE '\S'; then
       echo "File system exists on the disk."
      else
       echo "No file system found on the disk /dev/nvme1n1"
       mkfs -t xfs /dev/nvme1n1
      fi
      
      mount /dev/nvme1n1 /home
      
      if [ -d "/home/var-lib-containers" ]; then
       echo "Directory '/home/var-lib-containers' exist"
      else
       echo "Directory '/home/var-lib-containers' doesn't exist"
       mkdir -p /home/var-lib-containers /var/lib/containers
      fi
      
      mount --bind /home/var-lib-containers /var/lib/containers
      
      if [ -d "/home/var-tmp" ]; then
       echo "Directory '/home/var-tmp' exist"
      else
       echo "Directory '/home/var-tmp' doesn't exist"
       mkdir -p /home/var-tmp /var/tmp
      fi
      
      mount --bind /home/var-tmp /var/tmp
      
      if [ -d "/home/ec2-user" ]; then
      echo "ec2-user home exists"
      else
      echo "ec2-user home doesn't exist"
      mkdir -p /home/ec2-user/.ssh
      chown -R ec2-user /home/ec2-user
      fi
      
      sed -n 's,.*\(ssh-.*\s\),\1,p' /root/.ssh/authorized_keys > /home/ec2-user/.ssh/authorized_keys
      chown ec2-user /home/ec2-user/.ssh/authorized_keys
      chmod 600 /home/ec2-user/.ssh/authorized_keys
      chmod 700 /home/ec2-user/.ssh
      restorecon -r /home/ec2-user

  linux-fast-amd64: {}

  linux-extra-fast-amd64: {}

# Static hosts configuration
staticHosts:
