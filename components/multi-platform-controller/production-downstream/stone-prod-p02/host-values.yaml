environment: "prod"

archDefaults:
  arm64:
    ami: "ami-03d6a5256a46c9feb"
    key-name: "konflux-prod-int-mab01"
    security-group-id: "sg-0903aedd465be979e"
    subnet-id: "subnet-02c476f8d2a4ae05e"
  amd64:
    ami: "ami-026ebd4cfe2c043b2"
    key-name: "konflux-prod-int-mab01"
    security-group-id: "sg-0903aedd465be979e"
    subnet-id: "subnet-02c476f8d2a4ae05e"


dynamicConfigs:
  linux-arm64: {}

  linux-amd64: {}

  linux-mlarge-arm64: {}

  linux-mlarge-amd64: {}

  linux-mxlarge-arm64: {}

  linux-mxlarge-amd64: {}

  linux-m2xlarge-arm64: {}

  linux-m2xlarge-amd64: {}

  linux-d160-m2xlarge-arm64: {}

  linux-d160-m2xlarge-amd64: {}

  linux-m4xlarge-arm64: {}

  linux-m4xlarge-amd64: {}

  linux-d160-m4xlarge-arm64: {}

  linux-d160-m4xlarge-amd64: {}

  linux-m8xlarge-arm64: {}

  linux-m8xlarge-amd64: {}

  linux-d160-m8xlarge-arm64: {}

  linux-d160-m8xlarge-amd64: {}

  linux-d160-c4xlarge-amd64: {}

  linux-d160-c4xlarge-arm64: {}

  linux-d320-c4xlarge-amd64: {}

  linux-d320-c4xlarge-arm64: {}

  linux-d320-m8xlarge-amd64: {}

  linux-d320-m8xlarge-arm64: {}

  linux-fast-amd64: {}

  linux-extra-fast-amd64: {}

  linux-c6gd2xlarge-arm64:
    user-data: |
      Content-Type: multipart/mixed; boundary="//"
      MIME-Version: 1.0

      --//
      Content-Type: text/cloud-config; charset="us-ascii"
      MIME-Version: 1.0
      Content-Transfer-Encoding: 7bit
      Content-Disposition: attachment; filename="cloud-config.txt"

      #cloud-config
      cloud_final_modules:
        - [scripts-user, always]

      --//
      Content-Type: text/x-shellscript; charset="us-ascii"
      MIME-Version: 1.0
      Content-Transfer-Encoding: 7bit
      Content-Disposition: attachment; filename="userdata.txt"

      #!/bin/bash -ex

      # Format and mount NVMe disk
      mkfs -t xfs /dev/nvme1n1
      mount /dev/nvme1n1 /home

      # Create required directories
      mkdir -p /home/var-lib-containers /var/lib/containers /home/var-tmp /var/tmp /home/ec2-user/.ssh

      # Setup bind mounts
      mount --bind /home/var-lib-containers /var/lib/containers
      mount --bind /home/var-tmp /var/tmp

      # Configure ec2-user SSH access
      chown -R ec2-user /home/ec2-user
      sed -n 's,.*\(ssh-.*\s\),\1,p' /root/.ssh/authorized_keys > /home/ec2-user/.ssh/authorized_keys
      chown ec2-user /home/ec2-user/.ssh/authorized_keys
      chmod 600 /home/ec2-user/.ssh/authorized_keys
      chmod 700 /home/ec2-user/.ssh
      restorecon -r /home/ec2-user

      --//--

  linux-cxlarge-arm64: {}

  linux-cxlarge-amd64: {}

  linux-c2xlarge-arm64: {}

  linux-c2xlarge-amd64: {}

  linux-c4xlarge-arm64: {}

  linux-c4xlarge-amd64: {}

  linux-c8xlarge-arm64: {}

  linux-c8xlarge-amd64: {}

  linux-g4xlarge-amd64: {}

  linux-g64xlarge-amd64:
    ami: "ami-0133ba5e6e6d57a02"
    user-data: |
      Content-Type: multipart/mixed; boundary="//"
      MIME-Version: 1.0

      --//
      Content-Type: text/cloud-config; charset="us-ascii"
      MIME-Version: 1.0
      Content-Transfer-Encoding: 7bit
      Content-Disposition: attachment; filename="cloud-config.txt"

      #cloud-config
      cloud_final_modules:
        - [scripts-user, always]

      --//
      Content-Type: text/x-shellscript; charset="us-ascii"
      MIME-Version: 1.0
      Content-Transfer-Encoding: 7bit
      Content-Disposition: attachment; filename="userdata.txt"

      #!/bin/bash -ex

      # Format and mount NVMe disk
      mkfs -t xfs /dev/nvme1n1
      mount /dev/nvme1n1 /home

      # Create required directories
      mkdir -p /home/var-lib-containers /var/lib/containers /home/var-tmp /var/tmp /home/ec2-user/.ssh

      # Setup bind mounts
      mount --bind /home/var-lib-containers /var/lib/containers
      mount --bind /home/var-tmp /var/tmp
      chmod a+rw /var/tmp

      # Configure ec2-user SSH access
      chown -R ec2-user /home/ec2-user
      sed -n 's,.*\(ssh-.*\s\),\1,p' /root/.ssh/authorized_keys > /home/ec2-user/.ssh/authorized_keys
      chown ec2-user /home/ec2-user/.ssh/authorized_keys
      chmod 600 /home/ec2-user/.ssh/authorized_keys
      chmod 700 /home/ec2-user/.ssh
      restorecon -r /home/ec2-user

      # GPU setup
      mkdir -p /etc/cdi /var/run/cdi
      chmod a+rwx /etc/cdi /var/run/cdi
      setsebool container_use_devices 1 2>/dev/null || true
      su - ec2-user
      nvidia-ctk cdi generate --output=/etc/cdi/nvidia.yaml
      chmod a+rw /etc/cdi/nvidia.yaml
      --//--

  linux-root-arm64:
    iops: "16000"
    throughput: "1000"
    sudo-commands: "/usr/bin/podman, /usr/bin/rm /usr/share/containers/mounts.conf"
    disk: "200"

  linux-root-amd64:
    instance-type: "m6idn.2xlarge"
    sudo-commands: "/usr/bin/podman, /usr/bin/rm /usr/share/containers/mounts.conf"
    disk: "200"
    user-data: |-
      Content-Type: multipart/mixed; boundary="//"
      MIME-Version: 1.0

      --//
      Content-Type: text/cloud-config; charset="us-ascii"
      MIME-Version: 1.0
      Content-Transfer-Encoding: 7bit
      Content-Disposition: attachment; filename="cloud-config.txt"

      #cloud-config
      cloud_final_modules:
        - [scripts-user, always]

      --//
      Content-Type: text/x-shellscript; charset="us-ascii"
      MIME-Version: 1.0
      Content-Transfer-Encoding: 7bit
      Content-Disposition: attachment; filename="userdata.txt"

      #!/bin/bash -ex

      # Format and mount NVMe disk
      mkfs -t xfs /dev/nvme1n1
      mount /dev/nvme1n1 /home

      # Create required directories
      mkdir -p /home/var-lib-containers /var/lib/containers /home/var-tmp /var/tmp /home/ec2-user/.ssh

      # Setup bind mounts
      mount --bind /home/var-lib-containers /var/lib/containers
      mount --bind /home/var-tmp /var/tmp

      # Configure ec2-user SSH access
      chown -R ec2-user /home/ec2-user
      sed -n 's,.*\(ssh-.*\s\),\1,p' /root/.ssh/authorized_keys > /home/ec2-user/.ssh/authorized_keys
      chown ec2-user /home/ec2-user/.ssh/authorized_keys
      chmod 600 /home/ec2-user/.ssh/authorized_keys
      chmod 700 /home/ec2-user/.ssh
      restorecon -r /home/ec2-user

      --//--

# Static hosts configuration
staticHosts:
  #PPC
  ppc64le-pi-static-x0:
    address: 10.130.75.6
    concurrency: '8'
    platform: linux/ppc64le
    secret: ibm-ppc64le-ssh-key
    user: root

  ppc64le-pi-static-x1:
    address: 10.130.74.121
    concurrency: '8'
    platform: linux/ppc64le
    secret: ibm-ppc64le-ssh-key
    user: root

  ppc64le-pi-static-x2:
    address: 10.130.74.46
    concurrency: '8'
    platform: linux/ppc64le
    secret: ibm-ppc64le-ssh-key
    user: root

  ppc64le-pi-static-x3:
   address: 10.130.74.80
   concurrency: '8'
   platform: linux/ppc64le
   secret: ibm-ppc64le-ssh-key
   user: root

  ppc64le-pi-static-x4:
   address: 10.130.74.191
   concurrency: '8'
   platform: linux/ppc64le
   secret: ibm-ppc64le-ssh-key
   user: root

  s390x-static-1:
    address: 10.130.79.4
    concurrency: '4'
    platform: linux/s390x
    secret: ibm-s390x-static-ssh-key
    user: root

  s390x-static-10:
    address: 10.130.79.72
    concurrency: '4'
    platform: linux/s390x
    secret: ibm-s390x-static-ssh-key
    user: root

  s390x-static-2:
    address: 10.130.79.5
    concurrency: '4'
    platform: linux/s390x
    secret: ibm-s390x-static-ssh-key
    user: root

  s390x-static-3:
    address: 10.130.79.6
    concurrency: '4'
    platform: linux/s390x
    secret: ibm-s390x-static-ssh-key
    user: root

  s390x-static-4:
    address: 10.130.79.37
    concurrency: '4'
    platform: linux/s390x
    secret: ibm-s390x-static-ssh-key
    user: root

  s390x-static-5:
    address: 10.130.79.36
    concurrency: '4'
    platform: linux/s390x
    secret: ibm-s390x-static-ssh-key
    user: root

  s390x-static-6:
    address: 10.130.79.68
    concurrency: '4'
    platform: linux/s390x
    secret: ibm-s390x-static-ssh-key
    user: root

  s390x-static-7:
    address: 10.130.79.69
    concurrency: '4'
    platform: linux/s390x
    secret: ibm-s390x-static-ssh-key
    user: root

  s390x-static-8:
    address: 10.130.79.70
    concurrency: '4'
    platform: linux/s390x
    secret: ibm-s390x-static-ssh-key
    user: root

  s390x-static-9:
    address: 10.130.79.71
    concurrency: '4'
    platform: linux/s390x
    secret: ibm-s390x-static-ssh-key
    user: root

