---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  namespace: appstudio-workload-monitoring
  name: prometheus
  labels:
    provider: appstudio-kcp-workload
    app.kubernetes.io/instance: prometheus
spec:
  alerting:
    alertmanagers:
    - name: alertmanager-operated
      namespace: appstudio-workload-monitoring
      port: web
      scheme: http
  image: quay.io/prometheus/prometheus:v2.39.1
  externalLabels:
    cluster: appstudio-kcp-workload
  logLevel: debug
  replicas: 2
  retention: 45d
  walCompression: true
  ruleSelector:
    matchLabels:
      prometheus: appstudio-kcp-workload
  securityContext: {}
  serviceAccountName: prometheus-k8s
  serviceMonitorSelector:
    matchLabels:
      prometheus: appstudio-kcp-workload
  ruleNamespaceSelector:
    matchLabels:
      openshift.io/workload-monitoring: "true"
  storage:
    volumeClaimTemplate:
      apiVersion: v1
      kind: PersistentVolumeClaim
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
        storageClassName: gp2
  version: v2.39.1
  volumeMounts:
    - mountPath: /etc/prometheus/tls
      name: secret-prometheus-oauth2-tls
  volumes:
  - name: secret-prometheus-oauth2-tls
    secret:
      secretName: prometheus-oauth2-tls
  - name: secret-prometheus-oauth-tls
    secret:
      secretName: prometheus-oauth-tls
  containers:
  # extra container to have an access to the Prometheus console to human users who need to login via GitHub
  - name: oauth2-proxy
    args:
    - --provider=github
    - --https-address=:9091
    - --email-domain=*
    - --upstream=http://localhost:9090
    - --tls-cert-file=/etc/tls/private/tls.crt
    - --tls-key-file=/etc/tls/private/tls.key
    - --skip-auth-regex=^/metrics
    - --skip-auth-regex=^/ping
    - --github-org=redhat-appstudio-sre
    - --github-team=stage
    env:
    - name: OAUTH2_PROXY_CLIENT_ID
      valueFrom:
        secretKeyRef:
          key: client-id
          name: prometheus-proxy-config
    - name: OAUTH2_PROXY_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          key: client-secret
          name: prometheus-proxy-config
    - name: OAUTH2_PROXY_COOKIE_SECRET
      valueFrom:
        secretKeyRef:
          key: cookie-secret
          name: prometheus-proxy-config
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.2.1
    imagePullPolicy: Always
    ports:
    - name: oauth2-proxy
      containerPort: 9091
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      periodSeconds: 10
      successThreshold: 1
      httpGet:
        scheme: HTTPS
        port: oauth2-proxy
        path: /ping
      timeoutSeconds: 1
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/tls/private
      name: secret-prometheus-oauth2-tls
  - name: oauth-proxy
    image: quay.io/openshift/origin-oauth-proxy:4.9.0
    imagePullPolicy: IfNotPresent
    ports:
    - name: oauth-proxy
      containerPort: 9092
      protocol: TCP
    args:
    - --https-address=:9092
    - --provider=openshift
    - --openshift-service-account=prometheus-k8s
    - --upstream=http://localhost:9090
    - --tls-cert=/etc/tls/private/tls.crt
    - --tls-key=/etc/tls/private/tls.key
    - --cookie-secret=SECRET
    # see https://github.com/openshift/oauth-proxy/#delegate-authentication-and-authorization-to-openshift-for-infrastructure
    - --openshift-delegate-urls={"/":{"group":"","resource":"namespaces","verb":"get"}}
    volumeMounts:
    - mountPath: /etc/tls/private
      name: secret-prometheus-oauth-tls
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  namespace: appstudio-workload-monitoring
  name: deadmanssnitch
  labels:
    prometheus: appstudio-kcp-workload
    role: alert-rules
spec:
  groups:
  - name: deadmanssnitch
    rules:
    - alert: SnitchHeartBeat
      annotations:
        message: "SnitchHeartBeat: appstudio-kcp-workload has not reported to Deadmanssnitch"
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/app-sre/sop/prometheus/prometheus-deadmanssnitch.md"
      expr: vector(1)
      labels:
        severity: deadman
---
apiVersion: v1
kind: Service
metadata:
  namespace: appstudio-workload-monitoring
  name: prometheus-oauth2
  labels:
    provider: appstudio-kcp-workload
    app.kubernetes.io/instance: prometheus
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: prometheus-oauth2-tls
spec:
  ports:
  - name: oauth2-proxy
    port: 9091
    protocol: TCP
    targetPort: 9091
  selector:
    app.kubernetes.io/instance: prometheus
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  namespace: appstudio-workload-monitoring
  name: prometheus
  labels:
    provider: appstudio-kcp-workload
  annotations:
    kubernetes.io/tls-acme: "true"
spec:
  to:
    kind: Service
    name: prometheus-oauth2
  port:
    targetPort: oauth2-proxy
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: reencrypt
---
apiVersion: v1
kind: Service
metadata:
  namespace: appstudio-workload-monitoring
  name: prometheus-oauth
  labels:
    provider: appstudio-kcp-workload
    app.kubernetes.io/instance: prometheus
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: prometheus-oauth-tls
spec:
  ports:
  - name: oauth-proxy
    port: 9092
    protocol: TCP
    targetPort: 9092
  selector:
    app.kubernetes.io/instance: prometheus
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  namespace: appstudio-workload-monitoring
  name: prometheus-oauth
  labels:
    provider: appstudio-kcp-workload
  annotations:
    kubernetes.io/tls-acme: "true"
spec:
  to:
    kind: Service
    name: prometheus-oauth
  port:
    targetPort: oauth-proxy
  tls:
    termination: reencrypt

