
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: gitopsdeployments.managed-gitops.redhat.com
spec:
  group: managed-gitops.redhat.com
  names:
    kind: GitOpsDeployment
    listKind: GitOpsDeploymentList
    plural: gitopsdeployments
    singular: gitopsdeployment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GitOpsDeployment is the Schema for the gitopsdeployments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitOpsDeploymentSpec defines the desired state of GitOpsDeployment
            properties:
              destination:
                description: 'Destination is a reference to a target namespace/cluster
                  to deploy to. This field may be empty: if it is empty, it is assumed
                  that the destination is the same namespace as the GitOpsDeployment
                  CR.'
                properties:
                  namespace:
                    description: The namespace will only be set for namespace-scoped
                      resources that have not set a value for .metadata.namespace
                    type: string
                type: object
              source:
                description: ApplicationSource contains all required information about
                  the source of an application
                properties:
                  path:
                    description: Path is a directory path within the Git repository,
                      and is only valid for applications sourced from Git.
                    type: string
                  repoURL:
                    description: RepoURL is the URL to the repository (Git or Helm)
                      that contains the application manifests
                    type: string
                  targetRevision:
                    description: TargetRevision defines the revision of the source
                      to sync the application to. In case of Git, this can be commit,
                      tag, or branch. If omitted, will equal to HEAD. In case of Helm,
                      this is a semver tag for the Chart's version.
                    type: string
                required:
                - repoURL
                type: object
              type:
                description: "Two possible values: - Automated: whenever a new commit
                  occurs in the GitOps repository, or the Argo CD Application is out
                  of sync, Argo CD should be told to (re)synchronize. - Manual: Argo
                  CD should never be told to resynchronize. Instead, synchronize operations
                  will be triggered via GitOpsDeploymentSyncRun operations only. -
                  See `GitOpsDeploymentSpecType*` \n Note: This is somewhat of a placeholder
                  for more advanced logic that can be implemented in the future. For
                  an example of this type of logic, see the 'syncPolicy' field of
                  Argo CD Application."
                type: string
            required:
            - source
            - type
            type: object
          status:
            description: GitOpsDeploymentStatus defines the observed state of GitOpsDeployment
            properties:
              conditions:
                items:
                  description: GitOpsDeploymentCondition contains details about an
                    applicationset condition, which is usally an error or warning
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the time the condition was
                        last observed
                      format: date-time
                      type: string
                    message:
                      description: Message contains human-readable message indicating
                        details about condition
                      type: string
                    reason:
                      description: Single word camelcase representing the reason for
                        the status eg ErrorOccurred
                      type: string
                    status:
                      description: True/False/Unknown
                      type: string
                    type:
                      description: Type is an applicationset condition type
                      type: string
                  required:
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              health:
                description: Health contains information about the application's current
                  health status
                properties:
                  message:
                    description: Message is a human-readable informational message
                      describing the health status
                    type: string
                  status:
                    description: Status holds the status code of the application or
                      resource
                    type: string
                type: object
              sync:
                description: SyncStatus contains information about the currently observed
                  live and desired states of an application
                properties:
                  revision:
                    description: Revision contains information about the revision
                      the comparison has been performed to
                    type: string
                  status:
                    description: Status is the sync state of the comparison
                    type: string
                required:
                - status
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
