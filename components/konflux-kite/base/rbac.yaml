# Konflux-kite specific RBAC for functionality (NS checking, etc)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: konflux-kite
  namespace: konflux-kite
---
# Authorize whether or not a user can view issues in a namespace
# via impersonation
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: konflux-kite-authorizer
rules:
# Impersonate permissions for NS access check
- apiGroups: [""]
  resources: ["users", "groups", "serviceaccounts"]
  verbs: ["impersonate"]
# Access review permissions
- apiGroups: ["authentication.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
# Fallback resource check
- apiGroups: ["authorization.k8s.io"]
  resources: ["selfsubjectaccessreviews"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: konflux-kite-authorizer
subjects:
- kind: ServiceAccount
  name: konflux-kite
  namespace: konflux-kite
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: konflux-kite-authorizer
---
# Be able to read pods in a cluster (used for authorization checks)
# EX: If a user can at least view pods in a namespace, they should be able
# to retrieve issues for that namespace.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: konflux-kite-pod-reader
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: konflux-kite-pod-reader
subjects:
- kind: ServiceAccount
  name: konflux-kite
  namespace: konflux-kite
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: konflux-kite-pod-reader
---
# Konflux-UI specific RBAC
# Needed to view things like DB secrets
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: konflux-kite-component-maintainers
  namespace: konflux-kite
subjects:
  - kind: Group
    apiGroup: rbac.authorization.k8s.io
    name: konflux-ui # Rover group
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: component-maintainer
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: konflux-kite-admin
  namespace: konflux-kite
subjects:
  - kind: Group
    apiGroup: rbac.authorization.k8s.io
    name: konflux-ui # Rover group
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
