apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: namespace-lister-proxy
  name: proxy
  namespace: namespace-lister
  annotations:
    ignore-check.kube-linter.io/no-anti-affinity: "Using topologySpreadConstraints"
spec:
  minReadySeconds: 60
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: namespace-lister-proxy
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: namespace-lister-proxy
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: namespace-lister-proxy
      containers:
      - command:
        - nginx
        - -g
        - daemon off;
        image: registry.access.redhat.com/ubi9/nginx-120@sha256:88a4f2d184f52c4d3956be06b12d578d0bf681ec9d0a8b80e558a98c1860fa12
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        name: nginx-120
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 3
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 30m
            memory: 128Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: proxy
          readOnly: true
          subPath: nginx.conf
        - mountPath: /var/log/nginx
          name: logs
        - mountPath: /var/lib/nginx/tmp
          name: nginx-tmp
        - mountPath: /run
          name: run
      dnsPolicy: ClusterFirst
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: nginx.conf
            path: nginx.conf
          name: proxy-konflux
        name: proxy
      - emptyDir: {}
        name: logs
      - emptyDir: {}
        name: nginx-tmp
      - emptyDir: {}
        name: run
