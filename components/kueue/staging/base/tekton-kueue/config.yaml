queueName: pipelines-queue
cel:
  expressions:
    # Set resource requests for multi platform pipelines
    - |
        has(pipelineRun.spec.params) &&
        pipelineRun.spec.params.exists(p, p.name == 'build-platforms') ?
        pipelineRun.spec.params.filter(
          p, 
          p.name == 'build-platforms')[0]
        .value.map(
          p,
          annotation("kueue.konflux-ci.dev/requests-" + replace(p, "/", "-"), "1") 
        ) : []

    # Set resource requests for multi platform pipelines which doesn't use the build-platforms parameter (old style)
    - |
      has(pipelineRun.spec.pipelineSpec) &&
      pipelineRun.spec.pipelineSpec.tasks.size() > 0 ?
      pipelineRun.spec.pipelineSpec.tasks.map(
        task,
        has(task.params) ? task.params.filter(p, p.name == 'PLATFORM') : []
      )
      .filter(p, p.size() > 0)
      .map(
        p,
        annotation("kueue.konflux-ci.dev/requests-" + replace(p[0].value, "/", "-"), "1")
      ) : []

    # Set the pipeline priority
    - |
        pacEventType == 'push' ? priority('konflux-post-merge-build') :
        pacEventType == 'pull_request' ? priority('konflux-pre-merge-build') :
        pacTestEventType == 'push' ? priority('konflux-post-merge-test') :
        pacTestEventType == 'pull_request' ? priority('konflux-pre-merge-test') :

        has(pipelineRun.metadata.labels) &&
        'appstudio.openshift.io/service' in pipelineRun.metadata.labels &&
        pipelineRun.metadata.labels['appstudio.openshift.io/service'] == 'release' &&
        'pipelines.appstudio.openshift.io/type' in pipelineRun.metadata.labels &&
        pipelineRun.metadata.labels['pipelines.appstudio.openshift.io/type'] == 'managed' ?
        priority('konflux-release') :

        has(pipelineRun.metadata.labels) &&
        'appstudio.openshift.io/service' in pipelineRun.metadata.labels &&
        pipelineRun.metadata.labels['appstudio.openshift.io/service'] == 'release' &&
        'pipelines.appstudio.openshift.io/type' in pipelineRun.metadata.labels &&
        pipelineRun.metadata.labels['pipelines.appstudio.openshift.io/type'] == 'tenant' ?
        priority('konflux-tenant-release') :

        plrNamespace == 'mintmaker' ? priority('konflux-dependency-update') :
        priority('konflux-default')
