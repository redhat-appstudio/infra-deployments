# These tests assume that a tenant namespace already has the `konflux-ci.dev/visibility=private`
# label and that the cluster policy does not apply to the following scenarios:
# 1. A non-tenant namespace is changed into a private tenant namespace (no konflux-ci.dev/visibility
#    label will be added).
# 2. A private tenant namespace is changed into a non-tenant namespace (the
#    konflux-ci.dev/visibility label will not be removed).

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: set-tenant-namespace-visibility-to-public
spec:
  description: |
    tests that a Namespace labeled with `konflux-ci.dev/type=tenant`
    will also get labeled with `konflux-ci.dev/visibility=public` if
    there is a RoleBinding for the `system:authenticated group` in the
    same Namespace
  bindings:
  - name: type
    value: tenant
  steps:
  - name: given-kyverno-has-permission-on-resources
    try:
    - apply:
        file: ../kyverno_rbac.yaml
  - name: given-set-tenant-namespace-visibility-clusterpolicy-exists
    try:
    - apply:
        file: ../set-tenant-namespace-visibility-clusterpolicy.yaml
    - assert:
        file: chainsaw-assert-clusterpolicy.yaml
  - name: given-tenant-namespace-exists
    try:
    - apply:
        file: ./resources/tenant-namespace.yaml
  - name: when-authenticated-rolebinding-exists
    try:
    - apply:
        file: ./resources/authenticated-rolebinding.yaml
    - assert:
        file: ./resources/authenticated-rolebinding.yaml
  - name: then-visibility-is-public
    try:
    - assert:
        file: ./resources/expected-public-tenant-namespace.yaml

---

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
   name: do-not-modify-non-tenant-namespace
spec:
  description: |
    tests that a non-tenant Namespace (one without a 
    `konflux-ci.dev/type=tenant` label) will not get get labeled 
    with a `konflux-ci.dev/visibility` label if a RoleBinding
    for the `system:authenticated group` is created
  bindings:
  - name: type
    value: non-tenant
  steps:
  - name: given-kyverno-has-permission-on-resources
    try:
    - apply:
        file: ../kyverno_rbac.yaml
  - name: given-set-tenant-namespace-visibility-clusterpolicy-exists
    try:
    - apply:
        file: ../set-tenant-namespace-visibility-clusterpolicy.yaml    
    - assert:
        file: chainsaw-assert-clusterpolicy.yaml
  - name: given-non-tenant-namespace-exists
    try:
    - apply:
        file: ./resources/non-tenant-namespace.yaml
  - name: when-authenticated-rolebinding-exists
    try:
    - apply:
        file: ./resources/authenticated-rolebinding.yaml  
    - assert:
        file: ./resources/authenticated-rolebinding.yaml
  - name: then-there-is-no-visibility
    try:
    - assert:
        file: ./resources/non-tenant-namespace.yaml

---

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
   name: change-namespace-from-private-to-public
spec:
  description: |
    tests that a Namespace with a `konflux-ci.dev/type=tenant` label
    and no RoleBinding for the `system:authenticated group` will
    get labeled with `konflux-ci.dev/visibility=private`. Once that
    Rolebinding is created, the label should change to 
    `konflux-ci.dev/visibility=public`.
  bindings:
  - name: type
    value: tenant
  steps:
  - name: given-kyverno-has-permission-on-resources
    try:
    - apply:
        file: ../kyverno_rbac.yaml
  - name: given-set-tenant-namespace-visibility-clusterpolicy-exists
    try:
    - apply:
        file: ../set-tenant-namespace-visibility-clusterpolicy.yaml
    - assert:
        file: chainsaw-assert-clusterpolicy.yaml
  - name: given-tenant-namespace-exists
    try:
    - apply:
        file: ./resources/tenant-namespace.yaml
  - name: then-visibility-is-private
    try:
    - assert:
        file: ./resources/expected-private-tenant-namespace.yaml
  - name: when-authenticated-rolebinding-exists
    try:
    - apply:
        file: ./resources/authenticated-rolebinding.yaml
    - assert:
        file: ./resources/authenticated-rolebinding.yaml
  - name: then-visibility-is-public
    try:
    - assert:
        file: ./resources/expected-public-tenant-namespace.yaml

---

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
   name: change-namespace-from-public-to-private
spec:
  description: |
    tests that a Namespace with a `konflux-ci.dev/type=tenant` label
    and a RoleBinding for the `system:authenticated group` will
    get labeled with `konflux-ci.dev/visibility=public`. Once that
    RoleBinding is removed, the label should change to 
    `konflux-ci.dev/visibility=private`.
  bindings:
  - name: type
    value: tenant
  steps:
  - name: given-kyverno-has-permission-on-resources
    try:
    - apply:
        file: ../kyverno_rbac.yaml
  - name: given-set-tenant-namespace-visibility-clusterpolicy-exists
    try:
    - apply:
        file: ../set-tenant-namespace-visibility-clusterpolicy.yaml
    - assert:
        file: chainsaw-assert-clusterpolicy.yaml
  - name: given-tenant-namespace-exists
    try:
    - apply:
        file: ./resources/tenant-namespace.yaml  
  - name: when-authenticated-rolebinding-exists
    try:
    - apply:
        file: ./resources/authenticated-rolebinding.yaml
    - assert:
        file: ./resources/authenticated-rolebinding.yaml
  - name: then-visibility-is-public
    try:
    - assert:
        file: ./resources/expected-public-tenant-namespace.yaml
  - name: when-authenticated-rolebinding-is-deleted
    try:
    - delete:
        file: ./resources/authenticated-rolebinding.yaml
  - name: then-visibility-is-private
    try:
    - assert:
        timeout: 2m
        file: ./resources/expected-private-tenant-namespace.yaml

---

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
   name: change-namespace-type-to-public-tenant
spec:
  description: |
    tests that a non-tenant Namespace (one without a 
    `konflux-ci.dev/type=tenant` label) will not get a 
    `konflux-ci.dev/visibility` label. Once a 
    `konflux-ci.dev/type=tenant` label is added to the Namespace
    and a RoleBinding for the `system:authenticated group` is 
    created, the `konflux-ci.dev/visibility=public` label will be 
    added.
  bindings:
  - name: type
    value: tenant-to-be
  steps:
  - name: given-kyverno-has-permission-on-resources
    try:
    - apply:
        file: ../kyverno_rbac.yaml
  - name: given-set-tenant-namespace-visibility-clusterpolicy-exists
    try:
    - apply:
        file: ../set-tenant-namespace-visibility-clusterpolicy.yaml
    - assert:
        file: chainsaw-assert-clusterpolicy.yaml
  - name: given-non-tenant-namespace-exists
    try:
    - apply:
        file: ./resources/non-tenant-namespace.yaml
  - name: then-namespace-has-no-visibility
    try:
    - assert:
        file: ./resources/non-tenant-namespace.yaml
  - name: given-type-label-exists-on-current-namespace
    try:
    - patch:
        file: ./resources/tenant-namespace.yaml  
  - name: when-authenticated-rolebinding-exists
    try:
    - apply:
        file: ./resources/authenticated-rolebinding.yaml
    - assert:
        file: ./resources/authenticated-rolebinding.yaml
  - name: then-visibility-is-public
    try:
    - assert:
        file: ./resources/expected-public-tenant-namespace.yaml

---

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: do-not-modify-tenant-namespace-with-non-clusterrole-rolebinding
spec:
  description: |
    tests that a Namespace labeled with `konflux-ci.dev/type=tenant`
    will keep its `konflux-ci.dev/visibility=private` label if
    there is a RoleBinding for the `system:authenticated group` (with a
    non-ClusterRole role reference) in the same Namespace
  bindings:
  - name: type
    value: tenant
  steps:
  - name: given-kyverno-has-permission-on-resources
    try:
    - apply:
        file: ../kyverno_rbac.yaml
  - name: given-set-tenant-namespace-visibility-clusterpolicy-exists
    try:
    - apply:
        file: ../set-tenant-namespace-visibility-clusterpolicy.yaml
    - assert:
        file: chainsaw-assert-clusterpolicy.yaml
  - name: given-tenant-namespace-exists
    try:
    - apply:
        file: ./resources/tenant-namespace.yaml
  - name: when-non-clusterrole-rolebinding-exists
    try:
    - apply:
        file: ./resources/non-clusterrole-rolebinding.yaml
    - assert:
        file: ./resources/non-clusterrole-rolebinding.yaml
  - name: then-visibility-is-private
    try:
    - assert:
        file: ./resources/expected-private-tenant-namespace.yaml

---

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: do-not-modify-tenant-namespace-with-wrong-clusterrole-rolebinding
spec:
  description: |
    tests that a Namespace labeled with `konflux-ci.dev/type=tenant`
    will keep its `konflux-ci.dev/visibility=private` label if
    there is a RoleBinding for the `system:authenticated group` (without
    the 'konflux-viewer-user-actions' role reference) in the same Namespace
  bindings:
  - name: type
    value: tenant
  steps:
  - name: given-kyverno-has-permission-on-resources
    try:
    - apply:
        file: ../kyverno_rbac.yaml
  - name: given-set-tenant-namespace-visibility-clusterpolicy-exists
    try:
    - apply:
        file: ../set-tenant-namespace-visibility-clusterpolicy.yaml
    - assert:
        file: chainsaw-assert-clusterpolicy.yaml
  - name: given-tenant-namespace-exists
    try:
    - apply:
        file: ./resources/tenant-namespace.yaml
  - name: when-wrong-clusterrole-rolebinding-exists
    try:
    - apply:
        file: ./resources/wrong-clusterrole-rolebinding.yaml
    - assert:
        file: ./resources/wrong-clusterrole-rolebinding.yaml
  - name: then-visibility-is-private
    try:
    - assert:
        file: ./resources/expected-private-tenant-namespace.yaml
