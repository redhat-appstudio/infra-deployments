---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: enterprise-contract
  namespace: openshift-gitops
spec:
  generators:
    - list:
        elements:
          # Determines which Rekor (Tekton Chains transparency log) variant will
          # be used, can be:
          #  * off      - transparency off
          #  * local    - transparency on, with an in-cluster Rekor instance
          #  * sigstore - transparency on, with Sigstore public Rekor instance
          - rekor: local
  syncPolicy:
    # Allows us to delete the "rekor" Application if "rekor" above is not "local"
    preserveResourcesOnDeletion: false
  template:
    metadata:
      name: enterprise-contract

    spec:
      project: default
      source:
        # Uses the overlay specified by "rekor" generator property above, this
        # will setup in-cluster Rekor (if set to "local"), and change the
        # chains-config ConfigMap based on that setting
        path: components/enterprise-contract/rekor-{{rekor}}
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      destination:
        namespace: openshift-gitops
        server: https://kubernetes.default.svc

      syncPolicy:

        # Comment this out if you want to manually trigger deployments (using the
        # Argo CD Web UI or Argo CD CLI), rather than automatically deploying on
        # every new Git commit to your directory.
        automated:
          prune: true
          selfHeal: true

        syncOptions:
          - CreateNamespace=true

        retry:
          limit: 50 # number of failed sync attempt retries; unlimited number of attempts if less than 0
          backoff:
            duration: 15s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
