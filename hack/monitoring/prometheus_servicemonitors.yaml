apiVersion: v1
kind: Template
metadata:
  name: prometheus-servicemonitors
objects:

# ServiceMonitors
# 1 resource per target to configure

#Sandbox Host Operator
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    namespace: ${MONITORING_NAMESPACE}
    name: sandbox-host-operator
    labels:
      prometheus: appstudio-sre
  spec:
    endpoints:
    - bearerTokenSecret:
        name: ${PROMETHEUS_K8S_SECRET_NAME}
        key: token
      interval: 15s
      scheme: https
      tlsConfig:
        insecureSkipVerify: true
      port: https
    namespaceSelector:
      matchNames:
      - toolchain-host-operator
    selector:
      matchLabels:
        control-plane: "controller-manager"
        operators.coreos.com/toolchain-host-operator.toolchain-host-operator: ""

#Sandbox Member Operator
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    namespace: ${MONITORING_NAMESPACE}
    name: sandbox-member-operator
    labels:
      prometheus: appstudio-sre
  spec:
    endpoints:
    - bearerTokenSecret:
        name: ${PROMETHEUS_K8S_SECRET_NAME}
        key: token
      interval: 15s
      scheme: https
      tlsConfig:
        insecureSkipVerify: true
      port: https
    namespaceSelector:
      matchNames:
      - toolchain-member-operator
    selector:
      matchLabels:
        control-plane: "controller-manager"
        operators.coreos.com/toolchain-member-operator.toolchain-member-operator: ""
# Loki
#- apiVersion: monitoring.coreos.com/v1
#  kind: ServiceMonitor
#  metadata:
#    namespace: ${MONITORING_NAMESPACE}
#    name: loki
#    labels:
#      prometheus: appstudio-sre
#  spec:
#    endpoints:
#    - bearerTokenSecret:
#        name: ${LOKI_SECRET_NAME} # this SA has the permissions to `get /metrics`
#        key: token
#      interval: 15s
#      scheme: https
#      tlsConfig:
#        insecureSkipVerify: true
#      port: http-metrics
#    namespaceSelector:
#      matchNames:
#      - ${MONITORING_NAMESPACE}
#    selector:
#      matchLabels:
#        app: loki-oauth

#Prometheus itself
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    namespace: ${MONITORING_NAMESPACE}
    name: prometheus
    labels:
      prometheus: appstudio-sre
  spec:
    endpoints:
    - bearerTokenSecret:
        key: ""
      interval: 15s
      port: oauth2-proxy
      scheme: HTTPS
      tlsConfig:
        caFile: /etc/prometheus/tls/tls.crt # volume mounted in the `prometheus` container of the prometheus pods
        serverName: "prometheus-oauth2.openshift-customer-monitoring.svc"
    namespaceSelector:
      matchNames:
      - ${MONITORING_NAMESPACE}
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus

parameters:
- name: MONITORING_NAMESPACE
  required: true
- name: PROMETHEUS_K8S_SECRET_NAME
  required: true
- name: LOKI_SECRET_NAME
  #  required: true
