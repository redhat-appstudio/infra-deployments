# Required
## Git remote repo name where is your fork where to push the changes.
## List of remotes -> git remote -v
## Example value: origin
export MY_GIT_FORK_REMOTE=

## HAS enable github integration
### Your GITHUB organization where to manage repositories by HAS
export MY_GITHUB_ORG=
### Personal API token with repo and delete_repo permission
export MY_GITHUB_TOKEN=

# Optional

## HAS enable github integration
### Override default Application service "image push" repository
export HAS_DEFAULT_IMAGE_REPOSITORY=
### Override Application service image
export HAS_IMAGE_REPO=
export HAS_IMAGE_TAG=
export HAS_PR_OWNER=
export HAS_PR_SHA=
### Override Build service image
export BUILD_SERVICE_IMAGE_REPO=
export BUILD_SERVICE_IMAGE_TAG=
export BUILD_SERVICE_PR_OWNER=
export BUILD_SERVICE_PR_SHA=
### Override JVM Build service image
export JVM_BUILD_SERVICE_IMAGE_REPO=
export JVM_BUILD_SERVICE_IMAGE_TAG=
export JVM_BUILD_SERVICE_PR_OWNER=
export JVM_BUILD_SERVICE_PR_SHA=
export JVM_BUILD_SERVICE_CACHE_IMAGE_REPO=
export JVM_BUILD_SERVICE_CACHE_IMAGE_TAG=
export JVM_BUILD_SERVICE_SIDECAR_IMAGE_REPO=
export JVM_BUILD_SERVICE_SIDECAR_IMAGE_TAG=
export JVM_BUILD_SERVICE_REQPROCESSOR_IMAGE_REPO=
export JVM_BUILD_SERVICE_REQPROCESSOR_IMAGE_TAG=
export JVM_DELETE_TASKRUN_PODS=
export JVM_BUILD_SERVICE_JDK8_BUILDER_IMAGE_REPO=
export JVM_BUILD_SERVICE_JDK8_BUILDER_IMAGE_TAG=
export JVM_BUILD_SERVICE_JDK11_BUILDER_IMAGE_REPO=
export JVM_BUILD_SERVICE_JDK11_BUILDER_IMAGE_TAG=
export JVM_BUILD_SERVICE_JDK17_BUILDER_IMAGE_REPO=
export JVM_BUILD_SERVICE_JDK17_BUILDER_IMAGE_TAG=
### Override the default Tekton bundle
export DEFAULT_BUILD_BUNDLE=

## Integration service
### Change of the image
export INTEGRATION_IMAGE_REPO=
export INTEGRATION_IMAGE_TAG=
export INTEGRATION_RESOURCES=

## Release service
### Change of the image
export RELEASE_IMAGE_REPO=
export RELEASE_IMAGE_TAG=
export RELEASE_RESOURCES=

## SPI integration
### Based on https://github.com/redhat-appstudio/service-provider-integration-operator#configuration
export SHARED_SECRET= # Random string
export SPI_TYPE= # GitHub
export SPI_CLIENT_ID=
export SPI_CLIENT_SECRET=
### Change of the image
export SPI_OPERATOR_IMAGE_REPO=
export SPI_OPERATOR_IMAGE_TAG=
### The API server SPI should use to perform cluster requests. This should be the same as the API server
### used by HAC.
export SPI_API_SERVER=

## Application management
### Deploy only listed applications
export DEPLOY_ONLY=""

## Docker.io authenticated - to avoid pull limits
### Format username:access_token, eg. mkovarik:59028532-a374-11ec-989b-98fa9b70b53f
export DOCKER_IO_AUTH=""

## Pipelines as Code integration
### Instructions for GitHub APP creation - https://pipelinesascode.com/docs/install/github_apps/#setup
### Webhook url, webhook secret is managed by preview.sh
### pipelines-as-code-secret is created by preview.sh
export GITHUB_APP_PRIVATE_KEY= # Base64 encoded private key of the GitHub APP
export GITHUB_APP_ID= # Application ID
